name: Electron Vite Build

on:
  push:
    branches: [ main, master ]
    paths:
      - '**'
      - '!**/.github/workflows/**'
      - '.github/workflows/build.yaml'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**'
      - '!**/.github/workflows/**'

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint Electron app
        run: yarn lint

      - name: Test Electron app
        run: yarn test

      - name: Type check
        run: yarn typecheck

  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    needs: test-and-lint
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Electron for Windows
        if: matrix.os == 'windows-latest'
        run: yarn build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron for macOS
        if: matrix.os == 'macos-latest'
        run: yarn build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron for Linux
        if: matrix.os == 'ubuntu-latest'
        run: yarn build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          if-no-files-found: ignore
